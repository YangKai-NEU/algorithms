/*
题目描述
请编写一个算法，若N阶方阵中某个元素为0，则将其所在的行与列清零。
给定一个N阶方阵int[][](C++中为vector<vector><int>>)mat和矩阵的阶数n，请返回完成操作后的int[][]方阵(C++中为vector<vector><int>>)，保证n小于等于300，矩阵中的元素为int范围内。</int></vector></int></vector>
测试样例：
[[1,2,3,0,1,2,0,0,1]]
返回：[[0,0,3,0,0,0,0,0,0]]
*/

#include <vector>
#include <math.h>
#include <iostream>
using namespace std;

class Clearer {
public:
    vector<vector<int> > clearZero(vector<vector<int> > mat, int n) {
        // write code here
		vector<bool> rows(n,false);
		vector<bool> cols(n,false);
        vector<vector<int> > r(mat);
		for(int i=0;i<n;i++){
			for(int j=0;j<n;j++){
				if(mat[i][j]==0){
					rows[i]=true;
					cols[j]=true;
				}
			}
		}
		for(int i=0;i<n;i++){
			for(int j=0;j<n;j++){
				if(rows[i]||cols[j]){
					r[i][j]=0;
                }
			}
		}
		return r;
    }
};

int main(int argc, char *argv[])
{
	Clearer c;
	int a[]={84723,160966,131401,0,0,72950,0,99795,201933,206665,38068,51367,225028,148542,288421,175496,182352,239375,25268,14323,233117,171431,71668,91234,0,263829,179042,294483,69075,170720,174293,213328,223600,179091,106426,105929,99435,149216,152255,129819,188001,129488,299967,130,184790,123757,188528,20407,280655,26835,214087,278789,260645,47671,112374,0,55415,152144,172522,84307,206962,281718,277856,230486,143512,113588,233559,128422,268760,299980,112639,137909,5144,156944,222498,260480,89605,273657,182835,29155,222183,8566,222526,252186,206944,258665,92920,199875,288850,235512,121764,294423,269365,211131,27366,199113,87645,159220,69497,45356,274445,64369,155646,210171,190059,254108,199755,197882,33121,282023,257627,158572,25810,134795,50231,230939,43104,190324,247033,122611,165231,148738,0,283931,77490,286081,147258,128799,242002,52104,151750,60209,0,217251,194719,176263,86562,160475,8802,32540,144238,19216,277285,218542,162773,32338,248197,122219,169802,106079,159508,110792,290534,48932,220154,238227,39426,32643,32431,180284,165479,255509,253273,143006,283211,65625,259633,143414,257728,99890,8798,173742,12587,78133,201954,20317,17365,19789,7240,217227,178454,208846,237423,285161,221600,168864,112992,224709,44291,100230,293497,287995,146769,249001,10327,14362,0,198862,11713,223400,71784,175960,61491,269652,186198,87349,52815,0,73306,159944,274223,0,134713,10926,36648,162823,291846,0,234410,204850,146510,238451,18670,106831,47183,270013,38204,251109,179492,18354,88175,193548,158716,13124,6927,175159,114177,147671,147576,223435,209506,27523,232357,184833,166118,232799,153405,0,274118,166271,52614,232319,47498,130494,288007,99455,180613,2777,134923,10116,140128,222065,21041,73211,80436,284728,246385,3629,284905,209149,36012,69156,193590,157094,9621,133314,22737,257440,44896,196851,53494,10448,275246,110809,5380,163745,244324,44693,190356,64993,125528,188307,9012,98707,175580,253734,30739,217283,234573,71899,0,160912,257133,150637,244016,186305,46937,81910,62469,27378,233816,291373,299769,233481,250697,282933,22084,127933,145221,237964,43342,112373,124258,120125,30109,26950,118905,250262,129848,126241,99087,80675,38091,239343,154480,45279,199047,236961,282895,183847,87030,282614,0,300792,93333,14797,55329,270171,88131,179944,92979,152053,27394,270790,162656,64348,166232,0,205951,143609,97690,73853,138785,116217,5696,21085,219317,89492,292007,121932,220449,215522,30462,136354,172707,204575,0,75528,118180,70945,250594,0,171369,211168,164422,18738,110911,222782,260868,99474,27703,11584,154585,269124,0,44396,168972,267045,163782,14760,251135,135587,37117,19493,264616,132505,290181,247120,20461,201887,269903,57642,253854,155863,244585,52926,116832,91003,107851,196714,50681,217967,106352,260989,35034,48645,244653,138661,246409,59754,23806,237736,238369,145739,7762,9642,296330,284522,45513,180395,105370,235799,260180,68830,157865,24303,42878,24954,207125,285955,158301,144999,295065,267544,11156,72916,104952,173294,140841,34006,184569,122354,130135,186758,107310,129502,52929,186868,144645,150691,265046,157156,172469,277282,276508,95095,136687,50948,159082,240516,217483,285864,145427,138547,271336,87659,49060,240297,255708,96563,69874,78233,0,30759,38442,140549,37169,181379,190730,214890,52726,148472,246299,45666,173574,112549,281559,175341,56185,265611,213183,71033,97233,233684,0,165930,258760,141578,25447,232311,71692,298644,73061,289991,173720,237449,240303,51053,282724,248575,274674,10307,18015,218745,206498,250700,151865,138309,57799,24809,108143,0,24035,107795,117808,23261,240321,116384,222197,163188,200680,178761,101111,0,112263,212445,81989,38643,14030,92078,234439,200953,208530,89551,67470,276443,119553,295672,56250,94244,98236,49341,55853,126117,0,285435,107529,150230,190071,214717,153222,263115,142298,45744,131430,115474,47798,200292,34876,291557,284492,284998,251111,130717,180207,279206,28779,271997,34867,96107,239147,287915,8749,64770,295779,225123,91642,83258,21579,186723,99597,255782,55121,287845,172655,86481,124291,180369,232800,61913,239048,0,176138,45252,64604,62373,254899,209423,217991,293,132045,298419,20165,34878,126152,219449,87099,119385,159183,290769,157011,125486,193166,50582,19333,86475,264560,284457,17339,11310,99691,187492,195513,262526,133524,293304,194336,9664,173035,217738,199654,194051,116738,333,175116,154202,167404,19725,164094,127106,184517,169942,84214,248368,242178,128295,156655,18926,260921,139044,191822,223406,196777,180608,212994,43052,244,58619,299069,0,218823,61051,0,275256,245092,50377,280012,132858,32913,180806,224944,100247,2528,109195,211948,183001,91005,177060,164006,125834,88686,52626,295934,46191,266736,163587,256440,136745,300744,169911,280297,14761,24870,44974,9149,276499,269711,162341,12471,126529,94260,36805,265139,0,198508,268950,299932,71406,145741,60593,115226,25821,223819,35344,0,240553,55774,192185,88693,31622,114980,177782,62638,105689,23866,56105,31702,126199,185516,89183,120889,73816,0,227680,76842,64452,180167,185921,212236,59087,0,108514,68183,0,234012,248061,2732,239011,45474,132767,115223,24051,74297,275284,72718,130199,169830,226443,78648,62474,35348,177868,238641,275370,110117,30263,249275,255834,144884,205756,262211,211460,119167,203861,275247,0,249205,217755,145570,236808,244919,0,151724,64636,2047,284042,189309,121517,24409,213939,107852,301340,99074,79764,242221,127089,77138,283522,4064,244401,206817,240850,221450,277074,288912,92703,207837,130125,209089,289071,145624,184364,31525,22974,45145,199381,130991,235943,293071,236380,222725,209802,217159,178019,266994,200502,300548,37983,86902,187238,60444,234167,163628,277995,294882,123063,97447,214009,263902,11688,146288,263165,179504,51295,43460,298235,265357,240533,264134,274588,38570,144425,23885,167106,63166,178549,108996,97767,183247,124671,276253,96599,122451,254525,113049,182255,0,250358,269394,200835,85638,11716,238957,167933,233129,157904,258106,144418,72734,122947,92927,105237,167255,296637,155113,275206,97084,74108,254544,214740,266001,172407,96033,94760,257477,66262,277478,2462,50055,115185,115355,110962,77277,205189,169186,75390,185723,105412,95240,0,123952,91114,61738,198473,249085,0,174990,130081,88759,256232,51844,19948,235264,19023,230394,100478,58840,50717,64832,49393,215370,216434,107735,293885,256937,232357,97102,32775,33706,208591,176538,164179,110305,128437,147102,134532,261138,131304,216764,129999,142442,229672,0,142241,77126,291100,127617,213441,188004,86053,83833,266753,0,240696,140147,302852,15687,98856,134238,148014,108773,226510,112131,249630,116664,280543,74043,130817,232880,166332,71782,165903,162878,159328,35303,197645,25405,0,38282,158304,6442,36025,63942,0,85846,186554,159753,160149,142786,285673,142651,187395,270899,277859,75006,29134,259847,33489,216070,134004,23069,223665,119002,0,200827,151976,111873,69154,108708,0,99760,105099,93988,251800,224440,60934,91607,117487,205411,85901,195388,253453,127439,37899,194728,158450,0,67582,160437,96448,44083,186441,295614,106720,14503,242830,145925,166038,287154,176544,164642,127678,78857,216377,263102,276010,15840,298099,132742,187513,226833,67381,161199,277790,297413,236499,177130,131215,121579,133512,297198,235797,276483,159599,19679};
	vector<vector<int> > s;
	int n=sizeof(a)/sizeof(int);
	n=sqrt(n);
	for(int i=0;i<n;i++){
		vector<int> tmp;
		for(int j=0;j<n;j++){
			tmp.push_back(a[n*i+j]);
		}
		s.push_back(tmp);
	}
	vector<vector<int> > r=c.clearZero(s,n);
	for(int i=0;i<r.size();i++){
		for(int j=0;j<r[i].size();j++){
			cout<<r[i][j]<<" ";
		}
		cout<<endl;
	}
	
	return 0;
}
